openapi: 3.1.0
info:
  title: Go-Non-Go API Documentation
  description: API Documentation for the Go-Non-Go project
  version: 1.0.0
  contact:
    name: Go-Non-Go Team
    email: upperaps@gmail.com.br
    url: https://github.com/UpperApps
  license:
    identifier: MIT
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:3000
    description: Server for local development.
paths:
  /users:
    get:
      summary: Get all users
      description: Get all users
      tags:
        - Users
      parameters:
        - name: limit
          in: query
          required: true
          description: Max limit of items to return.
          schema: &ref_7
            type: number
        - name: offset
          in: query
          required: true
          description: The number of items to skip before starting to collect the result set
          schema: &ref_8
            type: number
      responses:
        '200':
          description: Ok - Expected response to a valid request.
          content: &ref_5
            application/json:
              schema:
                type: object
                required: &ref_0
                  - name
                  - email
                  - password
                properties: &ref_1
                  id:
                    type: string
                    description: User id
                  name:
                    type: string
                    description: User name
                  email:
                    type: string
                    description: User email
                  password:
                    type: string
                    description: User password
                  createdAt:
                    type: string
                    description: User creation date
                  updatedAt:
                    type: string
                    description: User update date
        '500':
          description: Internal Server Error
          content: &ref_4
            application/json:
              schema:
                type: object
                required: &ref_2
                  - message
                properties: &ref_3
                  message:
                    type: string
                    description: Error message
    post:
      summary: Create a new user
      description: Create a new user
      tags:
        - Users
      requestBody:
        description: User object to be created
        required: true
        content:
          application/json:
            schema:
              type: object
              required: *ref_0
              properties: *ref_1
      responses:
        '201':
          description: User Created
          content: &ref_11
            application/json:
              schema:
                type: object
                required: *ref_0
                properties: *ref_1
        '400':
          description: Bad Request
          content: &ref_6
            application/json:
              schema:
                type: object
                required: *ref_2
                properties: *ref_3
        '500':
          description: Internal Server Error
          content: *ref_4
  /users/{userId}:
    get:
      summary: Info for a specific user
      description: Info for a specific user
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          description: The id of the user to retrieve.
          schema: &ref_9
            type: string
      responses:
        '200':
          description: Ok - Expected response to a valid request.
          content: *ref_5
        '400':
          description: Bad Request
          content: *ref_6
        '404':
          description: Not Found
          content: &ref_12
            application/json:
              schema:
                type: object
                required: *ref_2
                properties: *ref_3
        '500':
          description: Internal Server Error
          content: *ref_4
components:
  parameters:
    limit:
      name: limit
      in: query
      required: true
      description: Max limit of items to return.
      schema: *ref_7
    offset:
      name: offset
      in: query
      required: true
      description: The number of items to skip before starting to collect the result set
      schema: *ref_8
    user-id:
      name: userId
      in: path
      required: true
      description: The id of the user to retrieve.
      schema: *ref_9
    user-id-2:
      name: userId
      in: query
      required: true
      description: The id of the user to retrieve.
      schema: &ref_10
        type: string
    UserIdPathParameter:
      name: userId
      in: path
      required: true
      description: The id of the user to retrieve.
      schema: *ref_9
    LimitQueryParameter:
      name: limit
      in: query
      required: true
      description: Max limit of items to return.
      schema: *ref_7
    OffsetQueryParameter:
      name: offset
      in: query
      required: true
      description: The number of items to skip before starting to collect the result set
      schema: *ref_8
    UserIdQueryParameter:
      name: userId
      in: query
      required: true
      description: The id of the user to retrieve.
      schema: *ref_10
  schemas:
    user:
      type: object
      required: *ref_0
      properties: *ref_1
    error:
      type: object
      required: *ref_2
      properties: *ref_3
  responses:
    user-ok:
      description: Ok - Expected response to a valid request.
      content: *ref_5
    internal-server-error:
      description: Internal Server Error
      content: *ref_4
    user-created:
      description: User Created
      content: *ref_11
    bad-request:
      description: Bad Request
      content: *ref_6
    not-found:
      description: Not Found
      content: *ref_12
    UserOk:
      description: Ok - Expected response to a valid request.
      content: *ref_5
    NotFound:
      description: Not Found
      content: *ref_12
    BadRequest:
      description: Bad Request
      content: *ref_6
    InternalServerError:
      description: Internal Server Error
      content: *ref_4
    UserCreated:
      description: User Created
      content: *ref_11
